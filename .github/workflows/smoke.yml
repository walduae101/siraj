name: Production Smoke Tests

on:
  schedule:
    # Run every 15 minutes
    - cron: '*/15 * * * *'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to test'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  smoke-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [staging, production]
        exclude:
          - environment: production # Only run production on schedule, not on manual dispatch
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run smoke tests
        env:
          BASE_URL: ${{ matrix.environment == 'staging' && 'https://staging.siraj.life' || 'https://siraj.life' }}
          NODE_ENV: production
        run: |
          echo "ðŸ§ª Running smoke tests against: $BASE_URL"
          npx tsx scripts/smoke-prod.ts > smoke-results-${{ matrix.environment }}.log 2>&1
          
      - name: Upload smoke logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: smoke-logs-${{ matrix.environment }}-${{ github.run_number }}
          path: smoke-results-${{ matrix.environment }}.log
          retention-days: 30
          
      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = `ðŸš¨ Smoke Test Failure - ${{ matrix.environment }} - ${new Date().toISOString()}`;
            const body = `
            ## Smoke Test Failure
            
            **Environment:** ${{ matrix.environment }}
            **Time:** ${new Date().toISOString()}
            **Workflow:** [${context.workflow}](${context.payload.repository.html_url}/actions/runs/${context.runId})
            **Exit Code:** ${{ job.status === 'failure' && '1 (HTTP failure) or 2 (SLO violation)' }}
            
            ### Next Steps
            1. Check the [workflow logs](${context.payload.repository.html_url}/actions/runs/${context.runId})
            2. Download smoke logs from artifacts
            3. Verify the application is responding
            4. Check for any recent deployments
            5. Investigate and resolve the issue
            
            ### Auto-close
            This issue will be automatically closed when smoke tests pass again.
            `;
            
            // Check if there's already an open issue for this environment
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: `smoke-test-failure-${{ matrix.environment }}`
            });
            
            if (issues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: [`smoke-test-failure-${{ matrix.environment }}`, 'ops', 'urgent']
              });
            }
            
      - name: Close smoke test issues on success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            // Close any open smoke test failure issues for this environment
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: `smoke-test-failure-${{ matrix.environment }}`
            });
            
            for (const issue of issues.data) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `âœ… Smoke tests are now passing for ${{ matrix.environment }}. Closing this issue.`
              });
              
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                state: 'closed'
              });
            }
